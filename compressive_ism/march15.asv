%% Load and Preproocess the Image 
clear; close all; clc;

% GroundTruth = imread('data/groundTruth.png');
% detector_5 = imread('data/detector_5.png');
% detectorOutput = imread('data/detectorOutput.png');
% ism_apr= imread('data/ism_apr.png');
% lena = imread('data/lena.jpg');

image_rows = 512;
image_cols = 512;

% GroundTruth = preprocess(GroundTruth, image_rows, image_cols);
% detector_5 = preprocess(detector_5, image_rows, image_cols);
% detectorOutput = preprocess(detectorOutput, image_rows, image_cols);
% ism_apr = preprocess(ism_apr, image_rows, image_cols);
% lena = preprocess(lena, image_rows, image_cols);

% subplot(241);
% imshow(GroundTruth, []);
% title("Ground Turth");
% 
% subplot(242);
% imshow(detector_5, []);
% title("Std. Confocal. (Nd: 5 in 3 by 3)");
% % Err = RelErr(GroundTruth, detector_5);
% % caption = sprintf('\n Rel-Err: %4.2f%%',Err);
% % xlabel(caption, 'FontSize', 10); 
% 
% subplot(245);
% imshow(detectorOutput, []);
% title("SPAD Array");
% 
% subplot(246);
% imshow(ism_apr, []);
% title("ISM APR (By  Combining Array)");
% Err = RelErr(GroundTruth, ism_apr);
% caption = sprintf('\n Rel-Err: %4.2f%%',Err);
% xlabel(caption, 'FontSize', 10); 
%% Design the sampling matrix
[A, samplerMatrix, samplerLinearIdx, CR] = DesignSamplingMatrix(image_rows, image_cols);
%% Define the image going to be sample
sample = detector_5;
%% Get Measurments
measurments = samplerMatrix.*sample;
x =  sample(:);
y = x(samplerLinearIdx);

subplot(243);
imshow(measurments, []);
title("Sampled Points");
%% Reconstruct it
[reconstructed, t] = csAj(A, y, image_rows, image_cols);
%% PLot
Err = RelErr(detector_5, reconstructed);
caption = sprintf('%2d%% measurements \n Rel-Err: %4.2f%%, CPU: %4.2fs ',CR,Err,t);
subplot(244); 
imshow(reconstructed);
title('Std. confocal reconst');
xlabel(caption,'fontsize',10);
%% Do the SPAD array in loop.
N = 9;
detector = zeros(image_rows, image_cols, N);
detector_measurments = zeros(image_rows, image_cols, N);
detector_recon = zeros(image_rows, image_cols, N);
for i = 1:N
    img_name = ['data/detector_', num2str(i), '.png'];
    img = imread(img_name);
 
    img_processed = preprocess(img, image_rows, image_cols);
    
    % Store resized image in detector array
    detector(:, :, i) = img_processed;
    
    % Perform some operations on the image here, if needed
    % Show the image
    imshow(detector(:, :, i));
    
    %% Define the image going to be sample
    sample = detector(:, :, i);
    %% Get Measurments
    detector_measurments(:,:,i) = samplerMatrix.*sample;
    %% Save measurments in a separate file
    imwrite(detector_measurments(:,:,i), ['data/measure_', num2str(i), '.png']);
    x =  sample(:);
    y = x(samplerLinearIdx);
    %% Reconstruct it
    [detector_recon(:,:,i), t] = csAj(A, y, image_rows, image_cols);
    
    %% Save reconstructed image in a separate file
    imwrite(detector_recon(:,:,i), ['data/recon_', num2str(i), '.png']);
    
end